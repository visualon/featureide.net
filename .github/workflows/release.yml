name: release

on:
  push:
    tags:
      - v*

env:
  DOTNET_NOLOGO: true
  ProjectLoadStyle: All
  Configuration: Release

permissions:
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.event.number || github.ref }}
  cancel-in-progress: true

jobs:
  release:
    runs-on: windows-latest
    timeout-minutes: 15
    permissions:
      packages: write
      contents: write

    steps:
      - uses: actions/checkout@8f4b7f84864484a7bf31766abe9204da3cbe65b3 # v3.5.0

      - uses: actions/cache@88522ab9f39a2ea568f7027eddc7d8d8bc9d59c8 # v3.3.1
        with:
          path: ~/.nuget/packages
          # Look to see if there is a cache hit for the corresponding requirements file
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}

      - name: prepare
        run: dotnet restore

      - name: build
        run: dotnet build --no-restore

      - name: pack
        run: dotnet pack --no-build -o bin

      - uses: actions/upload-artifact@0b7f8abb1508181956e8e162db84b466c27e18ce # v3.1.2
        with:
          name: packages
          path: bin/*.nupkg

      - name: deploy github.com
        run: find bin -name '*.nupkg' | xargs dotnet nuget push -s $NUGET_SOURCE -k $NUGET_KEY --skip-duplicate --force-english-output
        shell: bash
        env:
          NUGET_SOURCE: https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json
          NUGET_KEY: ${{ secrets.GITHUB_TOKEN }}

      - name: deploy nuget.org
        run: find bin -name '*.nupkg' | xargs dotnet nuget push -s $NUGET_SOURCE -k $NUGET_KEY --skip-duplicate --force-english-output
        shell: bash
        env:
          NUGET_SOURCE: https://api.nuget.org/v3/index.json
          NUGET_KEY: ${{ secrets.NUGET_API_KEY }}

      - uses: marvinpinto/action-automatic-releases@919008cf3f741b179569b7a6fb4d8860689ab7f0 # v1.2.1
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          prerelease: ${{ contains(github.ref_name, '-') }}
