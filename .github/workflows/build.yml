name: build

on:
  push:
    branches:
      - '**'

env:
  DOTNET_NOLOGO: true

permissions:
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.event.number || github.ref }}
  cancel-in-progress: true

jobs:
  test-java:
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - uses: actions/checkout@1d96c772d19495a3b5c517cd2bc0cb401ea0529f # v4.1.3

      - name: build
        shell: pwsh
        run: ./tools/build-java.ps1

  test-dotnet:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 15

    strategy:
      # fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          # - macos-latest Doesn't work yet
          - windows-latest

    steps:
      - uses: actions/checkout@1d96c772d19495a3b5c517cd2bc0cb401ea0529f # v4.1.3

      - uses: actions/cache@0c45773b623bea8c8e75f6c82b208c3cf94ea4f9 # v4.0.2
        with:
          path: ~/.nuget/packages
          # Look to see if there is a cache hit for the corresponding requirements file
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}

      - name: prepare
        run: dotnet restore

      - name: tfm
        # building net461 doesn't work on non windows
        if: matrix.os != 'windows-latest'
        run: echo "NoNet4=true" >> $GITHUB_ENV

      - name: build
        run: dotnet build --no-restore

      - name: test
        run: dotnet test --no-build

      - name: Codecov
        uses: codecov/codecov-action@84508663e988701840491b86de86b666e8a86bed # v4.3.0
        with:
          files: '**/TestResults/*/*.cobertura.xml'
          fail_ci_if_error: true
          token: ${{ secrets.CODECOV_TOKEN }}

  build:
    runs-on: windows-latest
    timeout-minutes: 15
    needs: [test-java, test-dotnet]

    steps:
      - uses: actions/checkout@1d96c772d19495a3b5c517cd2bc0cb401ea0529f # v4.1.3

      - uses: actions/cache@0c45773b623bea8c8e75f6c82b208c3cf94ea4f9 # v4.0.2
        with:
          path: ~/.nuget/packages
          # Look to see if there is a cache hit for the corresponding requirements file
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}

      - name: prepare
        run: dotnet restore

      - name: build
        run: dotnet build --no-restore -c Release

      - name: pack
        run: dotnet pack --no-build -o bin -c Release

      - uses: actions/upload-artifact@1746f4ab65b179e0ea60a494b83293b640dd5bba # v4.3.2
        with:
          name: packages
          path: bin/*.nupkg
