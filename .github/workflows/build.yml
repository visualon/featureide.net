name: build

on:
  push:
    branches:
      - '**'

env:
  DOTNET_NOLOGO: true

permissions:
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.event.number || github.ref }}
  cancel-in-progress: true

jobs:
  test-java:
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

      - name: build
        shell: pwsh
        run: ./tools/build-java.ps1

  test-dotnet:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 15

    strategy:
      # fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          # - macos-latest Doesn't work yet
          - windows-latest

    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

      - uses: actions/cache@13aacd865c20de90d75de3b17ebe84f7a17d57d2 # v4
        with:
          path: ~/.nuget/packages
          # Look to see if there is a cache hit for the corresponding requirements file
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}

      - name: prepare
        run: dotnet restore

      - name: tfm
        # building net461 doesn't work on non windows
        if: matrix.os != 'windows-latest'
        run: echo "NoNet4=true" >> $GITHUB_ENV

      - name: build
        run: dotnet build --no-restore

      - name: test
        run: dotnet test --no-build

      - name: Codecov
        uses: codecov/codecov-action@eaaf4bedf32dbdc6b720b63067d99c4d77d6047d # v3.1.4
        with:
          files: '**/TestResults/*/*.cobertura.xml'

  build:
    runs-on: windows-latest
    timeout-minutes: 15
    needs: [test-java, test-dotnet]

    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

      - uses: actions/cache@13aacd865c20de90d75de3b17ebe84f7a17d57d2 # v4
        with:
          path: ~/.nuget/packages
          # Look to see if there is a cache hit for the corresponding requirements file
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}

      - name: prepare
        run: dotnet restore

      - name: build
        run: dotnet build --no-restore -c Release

      - name: pack
        run: dotnet pack --no-build -o bin -c Release

      - uses: actions/upload-artifact@694cdabd8bdb0f10b2cea11669e1bf5453eed0a6 # v4.2.0
        with:
          name: packages
          path: bin/*.nupkg
