name: build

on:
  push:

env:
  DOTNET_NOLOGO: true

jobs:
  test-java:
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8 # tag=v3.1.0

      - name: build
        shell: pwsh
        run: ./tools/build-java.ps1

  test-dotnet:
    runs-on: windows-latest
    timeout-minutes: 15

    steps:
      - uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8 # tag=v3.1.0

      - uses: actions/cache@9b0c1fce7a93df8e3bb8926b0d6e9d89e92f20a7 # tag=v3.0.11
        with:
          path: ~/.nuget/packages
          # Look to see if there is a cache hit for the corresponding requirements file
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nuget

      - name: prepare
        shell: pwsh
        run: ./tools/prepare.ps1

      - name: build
        shell: pwsh
        run: ./tools/build.ps1 -IkvmDebug $true

      - name: test
        shell: pwsh
        run: dotnet test test -l trx -v m --no-restore

  build:
    runs-on: windows-latest
    timeout-minutes: 15
    needs: [test-java, test-dotnet]

    steps:
      - uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8 # tag=v3.1.0

      - uses: actions/cache@9b0c1fce7a93df8e3bb8926b0d6e9d89e92f20a7 # tag=v3.0.11
        with:
          path: ~/.nuget/packages
          # Look to see if there is a cache hit for the corresponding requirements file
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nuget

      - name: prepare
        shell: pwsh
        run: ./tools/prepare.ps1

      - name: build
        shell: pwsh
        run: ./tools/build.ps1

      - uses: actions/upload-artifact@83fd05a356d7e2593de66fc9913b3002723633cb # tag=v3.1.1
        with:
          name: packages
          path: bin/*.nupkg

      - name: deploy github.com
        if: ${{ github.ref_type == 'tag' }}
        run: find bin -name '*.nupkg' -exec dotnet nuget push {} -s $NUGET_SOURCE -k $NUGET_KEY --skip-duplicate --force-english-output \;
        shell: bash
        env:
          NUGET_SOURCE: https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json
          NUGET_KEY: ${{ secrets.GITHUB_TOKEN }}

      - name: deploy nuget.org
        if: ${{ github.ref_type == 'tag' }}
        run: find bin -name '*.nupkg' -exec dotnet nuget push {} -s $NUGET_SOURCE -k $NUGET_KEY --skip-duplicate --force-english-output \;
        shell: bash
        env:
          NUGET_SOURCE: https://api.nuget.org/v3/index.json
          NUGET_KEY: ${{ secrets.NUGET_API_KEY }}
